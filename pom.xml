<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.4.1</version>
        <relativePath/>
    </parent>
    <groupId>bw.co.roguesystems.zetaedrms</groupId>
    <artifactId>zetaedrms</artifactId>
    <packaging>pom</packaging>
    <version>0.0.1</version>
    <name>Zeta EDRMS</name>
    <description>The Zeta EDRMS Project.</description>
    <inceptionYear></inceptionYear>
    <url>http://andromda.sourceforge.net/</url>
    <issueManagement>
        <system></system>
        <url></url>
    </issueManagement>
    <scm>
        <connection></connection>
        <developerConnection></developerConnection>
        <url></url>
    </scm>
    <organization>
        <name></name>
        <url></url>
    </organization>
    <licenses>
        <license>
            <name></name>
            <url></url>
            <distribution></distribution>
            <comments></comments>
        </license>
    </licenses>
    <ciManagement>
        <system></system>
        <url></url>
    </ciManagement>
    <developers>
        <developer>
            <id></id>
            <name>Onalenna Makhura</name>
            <email></email>
            <organization></organization>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone></timezone>
        </developer>
    </developers>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.andromda</groupId>
                <artifactId>andromda-core</artifactId>
                <version>${andromda.version}</version>
                <scope>provided</scope>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.andromda.translationlibraries</groupId>
                <artifactId>andromda-ocl-translation-core</artifactId>
                <version>${andromda.version}</version>
                <scope>provided</scope>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.andromda.translationlibraries</groupId>
                <artifactId>andromda-ocl-validation-library</artifactId>
                <version>${andromda.version}</version>
                <scope>provided</scope>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.andromda.translationlibraries</groupId>
                <artifactId>andromda-ocl-query-library</artifactId>
                <version>${andromda.version}</version>
                <scope>provided</scope>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- This dependency provides the ability to implement your
                 business logic in an interpreted manner during development on
                 your local machine -->
            <dependency>
                <groupId>org.andromda</groupId>
                <artifactId>andromda-script-wrappers</artifactId>
                <version>${andromda.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>1.9.4</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>1.11</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId> 
			    <artifactId>commons-collections4</artifactId>
			    <version>4.2</version>
            </dependency>
            <dependency>
                <groupId>commons-fileupload</groupId>
                <artifactId>commons-fileupload</artifactId>
                <version>1.5</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.17.0</version>
            </dependency>
            <dependency>
              <groupId>org.apache.commons</groupId>
              <artifactId>commons-lang3</artifactId>
              <version>3.8.1</version>
            </dependency>
            <dependency>
              <groupId>org.apache.commons</groupId>
              <artifactId>commons-text</artifactId>
              <version>1.3</version>
            </dependency>
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>1.2</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.spec</groupId>
                <artifactId>jboss-jboss-jakartaee-8.0</artifactId>
                <version>1.0.1.Final</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.11</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>1.2.17</version>
                <!--scope>test</scope-->
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>2.18.1</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
                <version>2.6.0</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-common</artifactId>
                <version>2.6.0</version>
            </dependency>
            <dependency>
                <groupId>com.bucket4j</groupId>
                <artifactId>bucket4j-core</artifactId>
                <version>8.10.1</version>
            </dependency>
            <dependency>
                <groupId>org.keycloak</groupId>
                <artifactId>keycloak-spring-boot-starter</artifactId>
                <version>${keycloak.version}</version>
            </dependency>
            <dependency>
                <groupId>org.keycloak</groupId>
                <artifactId>keycloak-admin-client</artifactId>
                <version>${keycloak.version}</version>
            </dependency>
            <dependency>
                <groupId>org.keycloak</groupId>
                <artifactId>keycloak-spring-security-adapter</artifactId>
                <version>${keycloak.version}</version>
            </dependency>
            <!-- Mockito for mocking objects in tests -->
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- For Working with Json Web Tokens (JWT) -->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>0.9.0</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${build-helper-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>add-target-src</id>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>add-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>target/src/main/java</source>
                                </sources>
                            </configuration>
                        </execution>
                        <execution>
                            <id>add-target-test</id>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>add-test-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>target/src/test/java</source>
                                </sources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.andromda.maven.plugins</groupId>
                    <artifactId>andromda-maven-plugin</artifactId>
                    <version>${andromda.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.andromda.maven.plugins</groupId>
                    <artifactId>andromdapp-maven-plugin</artifactId>
                    <version>${andromda.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>tomcat-maven-plugin</artifactId>
                    <version>1.1</version>
                    <configuration>
                      <contextFile>${project.basedir}/src/test/resources/context.xml</contextFile>
                      <additionalConfigFilesDir>${project.basedir}/src/test/resources</additionalConfigFilesDir>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
            <plugin>
                <!-- See https://github.com/lkwg82/enforcer-maven-plugin. Patched original. Fix cloudbees error on pom download -->
                <groupId>de.lgohlke.mojo</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${maven-enforcer-plugin.version}</version>
            </plugin>
        </plugins>
    </build>
    <modules>
        <!-- Save the values used to generate this project from andromdapp
        applicationParentDirectory=.
        author=Onalenna Makhura
        modelType=uml2
        applicationType=jar
        war=$war
        ear=$ear
        appServer=$appServer
        databaseType=postgres
        testDatabase=h2
        transactionPersistenceType=spring
        jsr181Webservice=$jsr181Webservice
        ejb=$ejb
        ejb3=$ejb3
        hibernate=$hibernate
        spring=true
        webType=angular
        jsf=false
        webservice=rest
        cxf=$cxf
        thymeleaf=false
        rest=true
		springws=true
        jbossSeam=$jbossSeam
        webserviceStack=spring
        embeddedWebServer=$embeddedWebServer
        jetty=$jetty
        tomcat=$tomcat
        secure=false
        -->
        <module>mda</module>
        <module>common</module>
        <module>core</module>
        <module>webservice</module>
        <module>angular</module>
    </modules>
    <properties>
        <andromda.version>5.0-SNAPSHOT</andromda.version>
        <downloadSources>true</downloadSources>
        <createChecksum>true</createChecksum>
        <uniqueVersion>false</uniqueVersion>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <stagingDirectory>${project.build.outputDirectory}/target/site</stagingDirectory>
        <testdb.groupId>com.h2database</testdb.groupId>
        <testdb.artifactId>h2</testdb.artifactId>
        <testdb.version>1.4.180</testdb.version>
        <testdb.driver>$${jdbc.driver}</testdb.driver>
        <testdb.dialect>$${jdbc.dialect}</testdb.dialect>
        <testdb.url>$${jdbc.url}</testdb.url>
        <testdb.username>$${jdbc.username}</testdb.username>
        <testdb.password>$${jdbc.password}</testdb.password>
        <!--
            Change this to generate to the correct MDA database mappings,
            For MySql use: MySQL
            For Hypersonic use: HypersonicSql
            For H2 use: H2Sql
            For Oracle9i use: Oracle9i
            For DB2 use: DB2
            For Informix use: InformixDB
            For MSSQL use: MSSQL
            For Pointbase use: PointBase
            For Postgres use: PostgreSQL
            For Sybase use: Sybase
            For SapDB use: SapDB
            For Derby use: Derby
        -->
        <sql.mappings>
            PostgreSQL
        </sql.mappings>
        <!--
        Change this for the appropriate database
        For H2 use: org.hibernate.dialect.H2Dialect
        For DB2 use: org.hibernate.dialect.DB2Dialect or org.hibernate.dialect.DB2390Dialect org.hibernate.dialect.DB2400Dialect
        For Derby use: org.hibernate.dialect.DerbyDialect
        For Hypersonic use: org.hibernate.dialect.HSQLDialect
        For Informix use: org.hibernate.dialect.InformixDialect
        For MySql4 use: org.hibernate.dialect.MySQLDialect
        For MySql5+ use: org.hibernate.dialect.MySQL5Dialect
        For MySql InnoDB use: org.hibernate.dialect.MySQL5InnoDBDialect
        For MySql MyISAM use: org.hibernate.dialect.MySQLMyISAMDialect
        For MSSQL use: org.hibernate.dialect.SQLServerDialect
        For Oracle any version use: org.hibernate.dialect.OracleDialect
        For Oracle8i use: org.hibernate.dialect.Oracle8iDialect
        For Oracle9i use: org.hibernate.dialect.Oracle9iDialect
        For Oracle10g or later use: org.hibernate.dialect.Oracle10gDialect
        For Pointbase use: org.hibernate.dialect.PointbaseDialect
        For Postgres use: org.hibernate.dialect.PostgreSQLDialect
        For Progress use: org.hibernate.dialect.ProgressDialect
        For SapDB use: org.hibernate.dialect.SAPDBDialect
        For Sybase use: org.hibernate.dialect.SybaseDialect or org.hibernate.dialect.Sybase11Dialect
        For Sybase Anywhere use: org.hibernate.dialect.SybaseAnywhereDialect
        -->
        <hibernate.dialect>
            org.hibernate.dialect.PostgreSQLDialect
        </hibernate.dialect>
        <tomcat.home>${env.CATALINA_HOME}</tomcat.home>
        <application.id>zetaedrms</application.id>
        <application.package>bw.co.roguesystems.zetaedrms</application.package>
        <application.name>Zeta EDRMS</application.name>
        <application.version>0.0.1</application.version>
        <dataSource.name>jdbc/${application.id}</dataSource.name>
        <dataSource>java:comp/env/${dataSource.name}</dataSource>
        <!-- Set andromda.xml hibernateVersion=7, sessionFactory and localTransactionManager to hibernate4.-->
        <hibernate.version>6.1.6.Final</hibernate.version>
        <!-- v 9.x only supports JDK7 and you cannot configure jetty.port from maven.-->
        <!-- v5 migration needed -->
        <!-- <spring.version>5.3.2</spring.version> -->
	    <spring-boot.version>3.2.5</spring-boot.version>
        <openapi.version>1.6.13</openapi.version>
        <!-- To override parent default settings for compiler plugin and compliance checks-->
        <dependencyConvergence>true</dependencyConvergence>
        <keycloak.version>25.0.3</keycloak.version>
        <!-- <junit.version>5.11.4</junit.version> -->
        <mockito.version>5.14.2</mockito.version>
    </properties>
    <profiles>
        <!--Profile configuration for local builds, activeByDefault, customize for your project -->
        <profile>
            <id>local</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!--
                Change driver path and jar for appropriate database
                For MySQL use: mysql-connector-java-X-bin.jar
                For Hypersonic use: hsqldb.jar
                -->
                <jdbc.driver.jar>
                    /path/to/postgres/lib/postgresql.jar
                </jdbc.driver.jar>
                <!--
                    Change driver for appropriate database
                    For H2 use: org.h2.Driver
                    For MySQL use: com.mysql.jdbc.Driver
                    For Hypersonic use: org.hsqldb.jdbcDriver
                    For Oracle9i use: oracle.jdbc.driver.OracleDriver
                    For DB2 use: COM.ibm.db2.jdbc.app.DB2Driver
                    For Informix use: com.informix.jdbc.IfxDriver
                    For MSSQL use: com.microsoft.jdbc.sqlserver.SQLServerDriver
                    For Pointbase use: com.pointbase.jdbc.jdbcUniversalDriver
                    For Postgres use: org.postgresql.Driver
                    For Sybase use: com.sybase.jdbc2.jdbc.SybDataSource
                    For SapDB use: com.sap.dbtech.jdbc.DriverSapDB
                    For Progress use: com.progress.sql.jdbc.JdbcProgressDriver
                    For Derby use: org.apache.derby.jdbc.EmbeddedDriver
                -->
                <jdbc.driver>
                    org.postgresql.Driver
                </jdbc.driver>
                <!--
                    Change connection url for appropriate database
                    For H2 use: jdbc:h2:~/zetaedrms
                    For MySQL use: jdbc:mysql://localhost:3306/zetaedrms
                    For Hypersonic use: jdbc:hsqldb:hsql://127.0.0.1/zetaedrms or jdbc:hsqldb:file:<path>/zetaedrms;shutdown=true
                    For Oracle9i use: jdbc:oracle:thin:@localhost:1521:yoursid
                    For DB2 use: jdbc:db2:zetaedrms
                    For Informix use: jdbc:informix-sqli://localhost:1557/zetaedrms:INFORMIXSERVER=myserver
                    For MSSQL use: jdbc:microsoft:sqlserver://localhost:1433;DatabaseName=zetaedrms
                    For Pointbase use: jdbc:pointbase:server://@pointbase.server@:@pointbase.port/pointbase.zetaedrms@,new
                    For Postgres use: jdbc:postgresql://localhost/zetaedrms
                    For Sybase use: jdbc:sybase:Tds:localhost:5000/zetaedrms?JCONNECT_VERSION=6
                    For SapDB use: jdbc:sapdb://127.0.0.1/zetaedrms
                    For Progress use: jdbc:JdbcProgress:T:localhost:3305:zetaedrms
                -->
                <jdbc.url>
                    jdbc:postgresql://localhost/zetaedrms
                </jdbc.url>
                <!-- Enter id/password for the database connection -->
                <jdbc.username>
                    rogueadmin
                </jdbc.username>
                <jdbc.password>Cash8Aes</jdbc.password>
                <!--
                    Change exception sorter class name for appropriate database
                    For H2 use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
                    For MySQL use: org.jboss.resource.adapter.jdbc.vendor.MySQLExceptionSorter
                    For Hypersonic use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
                    For Oracle9i use: org.jboss.resource.adapter.jdbc.vendor.OracleExceptionSorter
                    For DB2 use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
                    For Informix use: org.jboss.resource.adapter.jdbc.vendor.InformixExceptionSorter
                    For MSSQL use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
                    For Pointbase use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
                    For Postgres use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
                    For Sybase use: org.jboss.resource.adapter.jdbc.vendor.SybaseExceptionSorter
                    For SapDB use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
                    For Progress use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
                -->
                <jdbc.exception.sorter>
                    org.jboss.resource.adapter.jdbc.NullExceptionSorter
                </jdbc.exception.sorter>
                <!-- Change this to the host on which your webapp/service will be deployed -->
                <service.host>localhost</service.host>
            </properties>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.andromda.maven.plugins</groupId>
                            <artifactId>andromdapp-maven-plugin</artifactId>
                            <version>${andromda.version}</version>
                            <!-- provides the injection of the script wrapper support into the class files (this should only
                                 be done when developing locally), uncomment this executions element to enable
                            <executions>
                                <execution>
                                    <id>instrument-scripts</id>
                                    <goals>
                                        <goal>instrument-scripts</goal>
                                    </goals>
                                </execution>
                            </executions>
                            -->
                            <configuration>
                                <scriptWrapper>org.andromda.scriptwrappers.GroovyScriptWrapper</scriptWrapper>
                                <locations>
                                    <location>
                                        <rootPath>${project.basedir}/src/main/java</rootPath>
                                        <!-- adjust these to include or exclude specific files, by default
                                             all files found in the rootPath are considered
                                        <includes>
                                            <include>relative/path/to/file/to/include/SomeClass.java</include>
                                        </includes>
                                        <excludes>
                                            <exclude>relative/path/to/file/to/include/SomeClass.java</exclude>
                                        </excludes>
                                        -->
                                    </location>
                                </locations>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
            <!-- Customize for your project -->
            <!--distributionManagement>
                <repository>
                    <id>andromda-repository</id>
                    <name>AndroMDA Repository</name>
                    <url>file:/scratch/hudson/workspace/Andromda/zetaedrms/</url>
                    <uniqueVersion>false</uniqueVersion>
                </repository>
                <snapshotRepository>
                    <id>andromda-snapshots</id>
                    <name>AndroMDA Snapshot Repository</name>
                    <url>file:/scratch/hudson/workspace/Andromda/zetaedrms/</url>
                    <uniqueVersion>false</uniqueVersion>
                </snapshotRepository>
                <site>
                    <id>website</id>
                    <url>file:/scratch/hudson/workspace/Andromda/site/zetaedrms/</url>
                </site>
            </distributionManagement-->
        </profile>
        <!-- Cloudbees WebDav: See https://github.com/CloudBees-community/maven-config-github-cloudbees/blob/master/pom.xml
            For deployment of andromda samples. Configure server id/password in settings.xml to deploy. -->
        <profile>
            <id>cloudbees</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <!-- Deploy releases and snapshots to the CloudBees maven repositories. Customize for your project if using Cloudbees, or remove. -->
            <distributionManagement>
              <repository>
                <id>andromdabuild-cloudbees-release</id>
                <name>andromdabuild-cloudbees-release</name>
                <!-- Webdav repository url are prefixed with dav: -->
                <url>dav:https://repository-andromdabuild.forge.cloudbees.com/release/</url>
                <uniqueVersion>true</uniqueVersion>
              </repository>
              <snapshotRepository>
                <id>andromdabuild-cloudbees-snapshot</id>
                <name>andromdabuild-cloudbees-snapshot</name>
                <url>dav:https://andromdabuild-javaetmoi.forge.cloudbees.com/snapshot/</url>
                <uniqueVersion>false</uniqueVersion>
              </snapshotRepository>
              <site>
                  <id>website</id>
                  <url>file:/scratch/hudson/workspace/Andromda/site/</url>
              </site>
            </distributionManagement>
            <repositories>
              <repository>
                <id>andromdabuild-cloudbees-release</id>
                <name>andromdabuild-cloudbees-release</name>
                <url>https://andromdabuild-javaetmoi.forge.cloudbees.com/release/</url>
                <releases>
                  <enabled>true</enabled>
                </releases>
                <snapshots>
                  <enabled>false</enabled>
                </snapshots>
              </repository>
              <repository>
                <id>andromdabuild-cloudbees-snapshot</id>
                <name>andromdabuild-cloudbees-snapshot</name>
                <url>https://repository-andromdabuild.forge.cloudbees.com/snapshot/</url>
                <releases>
                  <enabled>false</enabled>
                </releases>
                <snapshots>
                  <enabled>true</enabled>
                </snapshots>
              </repository>
            </repositories>
        </profile>
    </profiles>
    <repositories>
        <repository>
            <id>sonatype</id>
            <name>Sonatype AndroMDA Repository</name>
            <url>http://oss.sonatype.org/content/groups/public</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>sonatype</id>
            <name>Sonatype AndroMDA Repository</name>
            <url>http://oss.sonatype.org/content/groups/public</url>
        </pluginRepository>
    </pluginRepositories>
    <!-- Comment to disable project reporting using default maven plugins -->
    <reporting>
        <plugins>
            <plugin>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>${maven-jxr-plugin.version}</version>
            </plugin>
            <plugin>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>${maven-project-info-reports-plugin.version}</version>
                <reportSets>
                  <reportSet>
                    <reports>
                      <report>cim</report>
                      <report>dependencies</report>
                      <report>dependency-convergence</report>
                      <report>dependency-management</report>
                      <report>help</report>
                      <report>index </report>
                      <report>issue-tracking</report>
                      <report>license</report>
                      <report>mailing-list</report>
                      <report>modules</report>
                      <report>plugin-management</report>
                      <report>plugins</report>
                      <report>project-team</report>
                      <report>scm</report>
                      <report>summary</report>
                    </reports>
                  </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven-javadoc-plugin.version}</version>
                <configuration>
                    <minmemory>128m</minmemory>
                    <maxmemory>1g</maxmemory>
                    <sourcepath>${project.basedir}/src/main/java;${project.basedir}/target/src/main/java</sourcepath>
                    <detectLinks/>
                    <links>
                                    <link>http://docs.oracle.com/javase/8/docs/api/</link>
                                    <link>http://docs.oracle.com/javaee/7/api/</link>
                        <link>http://docs.jboss.org/hibernate/stable/orm/javadocs/</link>
                        <link>http://docs.spring.io/spring/docs/current/javadoc-api/</link>
                        <link>http://jakarta.apache.org/commons/collections/apidocs/</link>
                        <link>http://jakarta.apache.org/commons/lang/apidocs/</link>
                        <link>http://jakarta.apache.org/commons/logging/apidocs/</link>
                        <link>http://logging.apache.org/log4j/1.2/apidocs/</link>
                        <link>http://junit.sourceforge.net/javadoc/</link>
                    </links>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>${maven-surefire-report-plugin.version}</version>
            </plugin>
            <plugin>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${maven-pmd-plugin.version}</version>
                <configuration>
                    <targetJdk>${java.runtime.version}</targetJdk>
                    <linkXRef>true</linkXRef>
                    <rulesets>
                        <ruleset>${pmd.ruleset}</ruleset>
                    </rulesets>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven-checkstyle-plugin.version}</version>
                <configuration>
                    <configLocation>${checkstyle.configLocation}</configLocation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>jdepend-maven-plugin</artifactId>
                <version>${jdepend-maven-plugin.version}</version>
            </plugin>
            <plugin>
                <artifactId>maven-changes-plugin</artifactId>
                <version>${maven-changes-plugin.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>changes-report</report>
                            <!-- Uncomment if using JIRA -->
                            <!--report>jira-report</report-->
                        </reports>
                    </reportSet>
                </reportSets>
                <configuration>
                    <columnNames>Key,Type,Summary,Assignee,Status,Resolution,Priority,Component</columnNames>
                    <sortColumnNames>Key</sortColumnNames>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>taglist-maven-plugin</artifactId>
                <version>${taglist-maven-plugin.version}</version>
                <configuration>
                    <tagListOptions>
                        <tagClasses>
                            <tagClass>
                                <displayName>Todo Work</displayName>
                                <tags>
                                    <tag>
                                        <matchString>todo</matchString>
                                        <matchType>ignoreCase</matchType>
                                    </tag>
                                    <tag>
                                        <matchString>FIXME</matchString>
                                        <matchType>exact</matchType>
                                    </tag>
                                    <tag>
                                        <matchString>XXX</matchString>
                                        <matchType>exact</matchType>
                                    </tag>
                                    <tag>
                                        <matchString>@deprecated</matchString>
                                        <matchType>exact</matchType>
                                    </tag>
                                </tags>
                            </tagClass>
                        </tagClasses>
                    </tagListOptions>
                </configuration>
            </plugin>
            <!-- Uncomment after configuring SCM connection>
            <plugin>
                <artifactId>maven-changelog-plugin</artifactId>
                <version>${maven-changelog-plugin.version}</version>
                <reportSets>
                    <reportSet>
                        <id>All Reports</id>
                        <configuration>
                            <type>range</type>
                            <range>90</range>
                            <dateFormat>yyyy-MM-dd HH:mm:ss</dateFormat>
                        </configuration>
                        <reports>
                            <report>changelog</report>
                            <report>file-activity</report>
                            <report>dev-activity</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin-->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <configuration>
                    <formats>
                        <format>html</format>
                        <format>xml</format>
                    </formats>
                </configuration>
            </plugin>
            <!-- Compare APIs to a previous version, uncomment when a release version exists -->
            <!--plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>clirr-maven-plugin</artifactId>
                <version>${clirr-maven-plugin.version}</version>
                <inherited>true</inherited>
                <configuration>
                    <minSeverity>info</minSeverity>
                </configuration>
            </plugin-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>javancss-maven-plugin</artifactId>
                <version>${javancss-maven-plugin.version}</version>
                <inherited>true</inherited>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>${findbugs-maven-plugin.version}</version>
                <configuration>
                    <xmlOutput>true</xmlOutput>
                    <effort>Default</effort>
                    <threshold>Normal</threshold>
                    <failOnError>false</failOnError>
                    <excludeFilterFile>${findbugs.excludeFilterFile}</excludeFilterFile>
                    <!--xmlOutputDirectory>directory location of findbugs xdoc xml report</xmlOutputDirectory>
                    <threshold>High|Normal|Low|Exp|Ignore</threshold>
                    <effort>Min|Default|Max</effort>
                    <includeFilterFile>findbugs-include.xml</includeFilterFile>
                    <visitors>FindDeadLocalStores,UnreadFields</visitors>
                    <omitVisitors>FindDeadLocalStores,UnreadFields</omitVisitors>
                    <onlyAnalyze>org.codehaus.mojo.findbugs.*</onlyAnalyze>
                    <pluginList>/libs/fb-contrib/fb-contrib-2.8.0.jar</pluginList>
                    <debug>true|false</debug>
                    <relaxed>true|false</relaxed>
                    <findbugsXmlOutput>true|false</findbugsXmlOutput>
                    <findbugsXmlOutputDirectory>location of legacy xml format report</findbugsXmlOutputDirectory-->
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>${versions-maven-plugin.version}</version>
                <reportSets>
                    <reportSet>
                      <reports>
                        <report>dependency-updates-report</report>
                        <report>plugin-updates-report</report>
                        <report>property-updates-report</report>
                      </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <!--plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>dashboard-maven-plugin</artifactId>
                <version>${dashboard-maven-plugin.version}</version>
            </plugin-->
            <!--plugin>
                <artifactId>maven-doap-plugin</artifactId>
                <version>${maven-doap-plugin.version}</version>
                <configuration>
                    <doapOptions>
                        <programmingLanguage>java</programmingLanguage>
                        <category>build-management</category>
                    </doapOptions>
                    <asfExtOptions>
                        <included>false</included>
                    </asfExtOptions>
                </configuration>
            </plugin-->
        </plugins>
    </reporting>
</project>
