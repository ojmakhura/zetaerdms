// Generated by andromda-angular cartridge (service\service.impl.ts.vsl) CAN EDIT
import { Injectable, inject } from '@angular/core';
import { Observable } from 'rxjs';
import { DocumentDTO } from '@app/model/bw/co/roguesystems/zetaedrms/document/document-dto';
import { HttpClient } from '@angular/common/http';
import { Page } from '@app/model/page.model';
import { SearchObject } from '@app/model/search-object';

@Injectable({
  providedIn: 'root'
})
export class DocumentApi {
    
    protected path = '/document';

    private http = inject(HttpClient);

    public download(filePath: string | any ): Observable<File | any> {

        return this.http.get<File | any>(this.path + `/download/{filePath}/filePath/${filePath}`);
    }

    public findById(id: string | any ): Observable<DocumentDTO | any> {

        return this.http.get<DocumentDTO | any>(this.path + `/id/${id}`);
    }

    public getAll(): Observable<DocumentDTO[] | any[]> {

        return this.http.get<DocumentDTO[] | any[]>(this.path + `/all`);
    }

    public getAllPaged(pageNumber: number | any , pageSize: number | any ): Observable<DocumentDTO | any> {

        return this.http.get<DocumentDTO | any>(this.path + `/all/paged?pageNumber=${pageNumber}&pageSize=${pageSize}`);
    }

    public pagedSearch(criteria: SearchObject<string> | any ): Observable<DocumentDTO | any> {

        return this.http.post<DocumentDTO | any>(this.path + `/search/paged`, criteria);
    }

    public remove(id: string | any ): Observable<boolean | any> {

        return this.http.delete<boolean | any>(this.path + `/id/${id}`);
    }

    public save(accessPointType: DocumentDTO | any ): Observable<DocumentDTO | any> {

        return this.http.post<DocumentDTO | any>(this.path, accessPointType);
    }

    public search(criteria: string | any ): Observable<DocumentDTO[] | any[]> {

        return this.http.get<DocumentDTO[] | any[]>(this.path + `/search?criteria=${criteria}`);
    }

    public upload(file: File | any ): Observable<DocumentDTO | any> {

        return this.http.post<DocumentDTO | any>(this.path + `/upload`, file);
    }

}
